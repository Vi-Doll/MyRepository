import socket
import requests
from requests.exceptions import RequestException

def scan_ports(ip, port_range=(1, 1024)):
    """Scan open ports on the given IP address."""
    open_ports = []
    print(f"Scanning ports on {ip}...")
    for port in range(port_range[0], port_range[1] + 1):
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(0.5)
            if s.connect_ex((ip, port)) == 0:
                open_ports.append(port)
    return open_ports

def check_http_headers(url):
    """Check for security misconfigurations in HTTP headers."""
    try:
        response = requests.get(url, timeout=5)
        headers = response.headers
        print("\n[+] Checking HTTP security headers:")
        for header in ["Strict-Transport-Security", "Content-Security-Policy", "X-Frame-Options"]:
            if header not in headers:
                print(f"[-] Missing: {header}")
            else:
                print(f"[+] Found: {header}")
    except RequestException as e:
        print(f"Error connecting to {url}: {e}")

def main():
    target_ip = input("Enter the target IP address: ")
    target_url = input("Enter the target URL (e.g., http://example.com): ")

    # Port Scanning
    port_range = (1, 1024)  # You can modify the range for a deeper scan
    open_ports = scan_ports(target_ip, port_range)
    if open_ports:
        print(f"\n[+] Open ports found: {open_ports}")
    else:
        print("\n[-] No open ports found.")

    # HTTP Header Security Check
    check_http_headers(target_url)

if __name__ == "__main__":
    main()
