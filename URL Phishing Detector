import re

def is_ip_address(url):
    """Check if the URL uses an IP address instead of a domain name."""
    ip_pattern = re.compile(r'http[s]?://\d{1,3}(\.\d{1,3}){3}(:\d+)?')
    return bool(ip_pattern.match(url))

def has_suspicious_words(url):
    """Check for suspicious words commonly used in phishing URLs."""
    suspicious_words = ['login', 'secure', 'account', 'update', 'verify', 'bank', 'password']
    return any(word in url.lower() for word in suspicious_words)

def has_unusual_symbols(url):
    """Check for excessive special characters or subdomains in the URL."""
    if url.count('-') > 3 or url.count('.') > 5 or '@' in url:
        return True
    return False

def evaluate_url(url):
    """Evaluate the risk level of the given URL."""
    risk_score = 0
    feedback = []

    if is_ip_address(url):
        risk_score += 2
        feedback.append("The URL uses an IP address instead of a domain name.")

    if has_suspicious_words(url):
        risk_score += 2
        feedback.append("The URL contains suspicious words (e.g., login, secure, account).")

    if has_unusual_symbols(url):
        risk_score += 1
        feedback.append("The URL has unusual symbols or excessive subdomains.")

    # Determine risk level
    if risk_score >= 4:
        risk_level = "High Risk"
    elif risk_score >= 2:
        risk_level = "Moderate Risk"
    else:
        risk_level = "Low Risk"

    return risk_level, feedback

def main():
    print("URL Phishing Detector\n")
    url = input("Enter the URL to check: ")

    risk_level, feedback = evaluate_url(url)

    # Display results
    print(f"\nRisk Level: {risk_level}\n")
    if feedback:
        print("Findings:")
        for point in feedback:
            print(f" - {point}")
    else:
        print("The URL appears safe based on basic checks.")

if __name__ == "__main__":
    main()
